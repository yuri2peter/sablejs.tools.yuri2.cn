import React from 'react';
import axios from 'axios';
import { useState, useCallback, useEffect } from 'react';
import Head from 'next/head';
import { Box, Button, TextField, Card, Typography } from '@mui/material';
import ClipboardJS from 'clipboard';
import { useSnackbar } from 'notistack';

const defaultCodes = `// fibonacci
const fib = n => {
  return n < 2 ? n : fib(n - 1) + fib(n - 2);
}`;

export default function Home({ stage = 'unknown' }) {
  const { enqueueSnackbar } = useSnackbar();
  useEffect(() => {
    const clipboard = new ClipboardJS('#btn_copy');
    clipboard.on('success', function (e) {
      enqueueSnackbar('Code copied.', {
        anchorOrigin: {
          vertical: 'bottom',
          horizontal: 'center',
        },
        variant: 'success',
      });
      e.clearSelection();
    });
    return () => {
      clipboard.destroy();
    };
  }, [enqueueSnackbar]);
  const [submitting, setSubmitting] = useState(false);
  const [originalCode, setOriginalCode] = useState(defaultCodes);
  const [compiledCode, setCompiledCode] = useState('');
  const [transformedCode, setTransformedCode] = useState('');

  const handleTextareaOriginalCodeChange = useCallback(e => {
    setOriginalCode(e.target.value);
  }, []);
  const handleButtonCompileClick = useCallback(
    async e => {
      const alert = () => {
        enqueueSnackbar('Code compile failed.', {
          anchorOrigin: {
            vertical: 'bottom',
            horizontal: 'center',
          },
          variant: 'error',
        });
        setCompiledCode('ERROR');
        setTransformedCode('ERROR');
      };
      setSubmitting(true);
      const { transformed, compiled, error } = await apiCompile(
        originalCode
      ).catch(alert);
      if (error) {
        alert();
      } else {
        enqueueSnackbar('Code compile success.', {
          anchorOrigin: {
            vertical: 'bottom',
            horizontal: 'center',
          },
          variant: 'success',
        });
        setCompiledCode(compiled);
        setTransformedCode(transformed);
      }
      setSubmitting(false);
    },
    [originalCode, enqueueSnackbar]
  );
  return (
    <Box
      sx={{
        height: '100%',
        background: 'url(https://bing.ioliu.cn/v1) no-repeat',
        backgroundSize: 'cover',
      }}
    >
      <Header />
      <Box height="1px"> </Box>
      <Box mx="auto" my={16} maxWidth={1024}>
        <Card
          sx={{
            background: 'rgba(255,255,255,0.7)',
            backdropFilter: 'blur(12px)',
            borderRadius: '16px',
            padding: 2,
            boxShadow: '0px 1px 13px 4px #ffffff6b;',
          }}
        >
          <Box py={4}>
            <Typography variant="h3" align="center" color="primary">
              Use sable.js online!
            </Typography>
          </Box>
          <Box p={2} display="flex">
            <Box flexGrow={1}>
              <Box>
                <TextField
                  label="Before"
                  multiline
                  fullWidth
                  rows={24}
                  value={originalCode}
                  onChange={handleTextareaOriginalCodeChange}
                />
              </Box>
              <Box mt={2}>
                <Button
                  disabled={submitting}
                  variant="contained"
                  fullWidth
                  onClick={handleButtonCompileClick}
                >
                  Compile
                </Button>
              </Box>
            </Box>
            <Box flexGrow={1} ml={2}>
              <Box>
                <TextField
                  label="Transformed"
                  multiline
                  fullWidth
                  rows={16}
                  readonly
                  value={transformedCode}
                />
              </Box>
              <Box mt="14px">
                <TextField
                  id="compiled"
                  label="Compiled"
                  multiline
                  fullWidth
                  rows={6}
                  readonly
                  value={compiledCode}
                />
              </Box>
              <Box mt={2}>
                <Button
                  disabled={submitting}
                  id="btn_copy"
                  color="secondary"
                  variant="contained"
                  fullWidth
                  data-clipboard-target="#compiled"
                >
                  Copy
                </Button>
              </Box>
            </Box>
          </Box>
        </Card>
      </Box>
    </Box>
  );
}

function Header() {
  return (
    <Head>
      <title>Sablejs Online</title>
      <meta name="description" content="Generated by naples next" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
  );
}

async function apiCompile(text) {
  const result = await axios.post('/api/app/compile', { text });
  return result.data;
}
